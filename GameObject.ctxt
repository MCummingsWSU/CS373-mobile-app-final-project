#BlueJ class context
comment0.target=GameObject
comment0.text=\r\n\ An\ interface\ containing\ methods\ for\ GameObjects.\ GameObject\ will\ be\ implemented\ in\ a\ MovableGameObject\ class,\ which\ will\ in\ turn\ be\ used\ to\ create\ subclasses\ for\ the\ player\ character\ and\ the\ obstacles\ in\ the\ game\r\n\r\n\ @author\ Michael\ Cummings\r\n\ @version\ 3.30.23\r\n
comment1.params=name
comment1.target=void\ setGameObjectName(java.lang.String)
comment1.text=\r\n\ Method\ to\ set\ a\ GameObject's\ name\r\n\ \r\n\ @param\ \ \ name\r\n
comment10.params=
comment10.target=double\ getGameObjectWidth()
comment10.text=\r\n\ Method\ to\ return\ a\ GameObject's\ width\r\n\ \r\n\ @return\ \ width\r\n
comment11.params=height
comment11.target=void\ setGameObjectHeight(double)
comment11.text=\r\n\ Method\ to\ set\ a\ GameObject's\ height\ on\ a\ 2D\ grid\r\n\ \r\n\ @param\ height\r\n
comment12.params=
comment12.target=double\ getGameObjectHeight()
comment12.text=\r\n\ Method\ to\ return\ a\ GameObject's\ height\r\n\ \r\n\ @return\ height\r\n
comment13.params=dw\ dh
comment13.target=void\ growGameObjectSize(double,\ double)
comment13.text=\r\n\ Method\ to\ grow\ a\ GameObject's\ width\ and\ height\ by\ dw,\ dh\r\n\ \r\n\ @param\ \ \ dw,\ dh\r\n
comment14.params=dw\ dh
comment14.target=void\ shrinkGameObjectSize(double,\ double)
comment14.text=\r\n\ Method\ to\ shrink\ a\ GameObject's\ width\ and\ height\ by\ dw,\ dh\r\n\ \r\n\ Calls\ growGameObjectSize\r\n\ \r\n\ @param\ \ \ dw,\ dh\r\n
comment15.params=
comment15.target=java.awt.Rectangle\ getGameObjectBounds()
comment15.text=\r\n\ Method\ to\ return\ a\ Rectangle\ whose\ dimensions\ are\ equal\ to\ the\ boundaries\ of\ the\ GameObject\r\n
comment16.params=a\ b
comment16.target=boolean\ collision(GameObject,\ GameObject)
comment16.text=\r\n\ Method\ to\ return\ true\ if\ two\ GameObjects\ intersect\ at\ any\ point\r\n\ \r\n\ @return\ \ collision\r\n
comment17.params=noCollide
comment17.target=void\ setGameObjectNoCollide(boolean)
comment17.text=\r\n\ Method\ to\ set\ a\ boolean\ indicating\ whether\ a\ GameObject\ should\ not\ collide\ with\ other\ GameObjects\r\n\ \r\n\ @param\ \ \ noCollide\r\n
comment18.params=
comment18.target=boolean\ getGameObjectNoCollide()
comment18.text=\r\n\ Method\ to\ return\ true\ if\ a\ GameObject\ should\ be\ not\ be\ able\ to\ collide\ with\ other\ game\ objects\r\n\ \r\n\ @return\ \ noCollide\r\n
comment2.params=
comment2.target=java.lang.String\ getGameObjectName()
comment2.text=\r\n\ Method\ to\ return\ a\ GameObject's\ name\r\n\ \r\n\ @return\ \ name\r\n
comment3.params=color
comment3.target=void\ setGameObjectColor(java.awt.Color)
comment3.text=\r\n\ Method\ to\ set\ a\ GameObject's\ Color\r\n\ \r\n\ @param\ \ \ color\r\n
comment4.params=
comment4.target=java.awt.Color\ getGameObjectColor()
comment4.text=\r\n\ Method\ to\ return\ a\ GameObject's\ Color\r\n\ \r\n\ @return\ \ color\r\n
comment5.params=location
comment5.target=void\ setGameObjectLocation(java.awt.Point)
comment5.text=\r\n\ Method\ to\ set\ a\ GameObject's\ location\ on\ a\ 2D\ grid\ using\ a\ Point\ object\r\n\ \r\n\ @param\ location\r\n
comment6.params=x\ y
comment6.target=void\ setGameObjectLocation(int,\ int)
comment6.text=\r\n\ Method\ to\ set\ a\ GameObject's\ location\ on\ a\ 2D\ grid\ using\ integer\ x\ and\ y-coordinates\r\n\ \r\n\ @param\ \ \ x,\ y\r\n
comment7.params=x\ y
comment7.target=void\ setGameObjectLocation(double,\ double)
comment7.text=\r\n\ Method\ to\ set\ a\ GameObject's\ location\ on\ a\ 2D\ grid\ using\ double\ x\ and\ y-coordinates\r\n\ \r\n\ @param\ \ \ x,\ y\r\n
comment8.params=
comment8.target=java.awt.Point\ getGameObjectLocation()
comment8.text=\r\n\ Method\ to\ return\ a\ GameObject's\ location\ on\ a\ 2D\ grid\ as\ a\ Point\ object\ containing\ an\ x-y\ coordinate\ pair\r\n\ \r\n\ @return\ \ location\r\n
comment9.params=width
comment9.target=void\ setGameObjectWidth(double)
comment9.text=\r\n\ Method\ to\ set\ a\ GameObject's\ width\ on\ a\ 2D\ grid\r\n\ \r\n\ @param\ \ \ width\r\n
numComments=19
